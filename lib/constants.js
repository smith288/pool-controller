const MAX_SEND_ATTEMPTS = 100; // Max number of times command will be attempted

const DLE = Buffer.from([0x10]);
const STX = Buffer.from([0x02]);
const ETX = Buffer.from([0x03]);

const FRAME_TYPE_KEEPALIVE = Buffer.from([0x01, 0x01]);
const FRAME_TYPE_LEDS = Buffer.from([0x01, 0x02]);
const FRAME_TYPE_DISPLAY = Buffer.from([0x01, 0x03]);
const FRAME_TYPE_DISPLAY_SERVICE = Buffer.from([0x02, 0x03]);
const FRAME_TYPE_SERVICE_MODE = Buffer.from([0x03, 0x03]);
const FRAME_TYPE_LOCAL_TOGGLE = Buffer.from([0x00, 0x02]);

const LED_MASK = [
  [
    { bit: 1 << 0, name: "heater1" },
    { bit: 1 << 1, name: "valve3" },
    { bit: 1 << 2, name: "checksystem" },
    { bit: 1 << 3, name: "pool" },
    { bit: 1 << 4, name: "spa" },
    { bit: 1 << 5, name: "filter" },
    { bit: 1 << 6, name: "lights" },
    { bit: 1 << 7, name: "aux1" },
  ],
  [
    { bit: 1 << 0, name: "aux2" },
    { bit: 1 << 1, name: "service" },
    { bit: 1 << 2, name: "aux3" },
    { bit: 1 << 3, name: "aux4" },
    { bit: 1 << 4, name: "aux5" },
    { bit: 1 << 5, name: "aux6" },
    { bit: 1 << 6, name: "valve4" },
    { bit: 1 << 7, name: "spillover" },
  ],
  [
    { bit: 1 << 0, name: "systemoff" },
    { bit: 1 << 1, name: "aux7" },
    { bit: 1 << 2, name: "aux8" },
    { bit: 1 << 3, name: "aux9" },
    { bit: 1 << 4, name: "aux10" },
    { bit: 1 << 5, name: "aux11" },
    { bit: 1 << 6, name: "aux12" },
    { bit: 1 << 7, name: "aux13" },
  ],
  [
    { bit: 1 << 0, name: "aux14" },
    { bit: 1 << 1, name: "superchlorinate" },
  ],
];

const buttonToggle = {
  service: Buffer.from([0x08, 0x00, 0x00, 0x00]),
  pool: Buffer.from([0x40, 0x00, 0x00, 0x00]),
  spa: Buffer.from([0x40, 0x00, 0x00, 0x00]),
  spillover: Buffer.from([0x40, 0x00, 0x00, 0x00]),
  filter: Buffer.from([0x00, 0x80, 0x00, 0x00]),
  lights: Buffer.from([0x10, 0x02, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x16, 0x10, 0x03]),
  heater1: Buffer.from([0x00, 0x00, 0x04, 0x00]),
  valve3: Buffer.from([0x00, 0x00, 0x01, 0x00]),
  valve4: Buffer.from([0x00, 0x00, 0x02, 0x00]),
  aux1: Buffer.from([0x00, 0x02, 0x00, 0x00]),
  aux2: Buffer.from([0x00, 0x04, 0x00, 0x00]),
  aux3: Buffer.from([0x00, 0x08, 0x00, 0x00]),
  aux4: Buffer.from([0x00, 0x10, 0x00, 0x00]),
  aux5: Buffer.from([0x00, 0x20, 0x00, 0x00]),
  aux6: Buffer.from([0x00, 0x40, 0x00, 0x00]),
  aux7: Buffer.from([0x00, 0x80, 0x00, 0x00]),
  aux8: Buffer.from([0x00, 0x00, 0x08, 0x00]),
  aux9: Buffer.from([0x00, 0x00, 0x10, 0x00]),
  aux10: Buffer.from([0x00, 0x00, 0x20, 0x00]),
  aux11: Buffer.from([0x00, 0x00, 0x40, 0x00]),
  aux12: Buffer.from([0x00, 0x00, 0x80, 0x00]),
  aux13: Buffer.from([0x00, 0x00, 0x00, 0x01]),
  aux14: Buffer.from([0x00, 0x00, 0x00, 0x02]),
};
const buttonsMenu = {
  left: Buffer.from([0x04, 0x00, 0x00, 0x00]),
  right: Buffer.from([0x01, 0x00, 0x00, 0x00]),
  plus: Buffer.from([0x20, 0x00, 0x00, 0x00]),
  minus: Buffer.from([0x10, 0x00, 0x00, 0x00]),
  menu: Buffer.from([0x02, 0x00, 0x00, 0x00]),
};
const buttonValue = {
  lights: Buffer.from([0x10, 0x02, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x16, 0x10, 0x03]),
  filter: Buffer.from([0x10, 0x02, 0x00, 0x02, 0x80, 0x00, 0x80, 0x00, 0x01, 0x14, 0x10, 0x03]),
  heater1: Buffer.from([0x10, 0x02, 0x00, 0x02, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1d, 0x10, 0x03]),
  pool: Buffer.from([0x10, 0x02, 0x00, 0x02, 0x40, 0x00, 0x40, 0x00, 0x00, 0x94, 0x10, 0x03]),
  menu: Buffer.from([0x10, 0x02, 0x00, 0x02, 0x02, 0x00, 0x02, 0x00, 0x00, 0x18, 0x10, 0x03]),
  plus: Buffer.from([0x10, 0x02, 0x00, 0x02, 0x20, 0x00, 0x20, 0x00, 0x00, 0x54, 0x10, 0x03]),
  minus: Buffer.from([0x10, 0x02, 0x00, 0x02, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x34, 0x10, 0x03]),
  left: Buffer.from([0x10, 0x02, 0x00, 0x02, 0x04, 0x00, 0x04, 0x00, 0x00, 0x1c, 0x10, 0x03]),
  right: Buffer.from([0x10, 0x02, 0x00, 0x02, 0x01, 0x00, 0x01, 0x00, 0x00, 0x16, 0x10, 0x03]),
};

module.exports = {
  MAX_SEND_ATTEMPTS,
  DLE,
  STX,
  ETX,
  FRAME_TYPE_KEEPALIVE,
  FRAME_TYPE_LEDS,
  FRAME_TYPE_DISPLAY,
  FRAME_TYPE_DISPLAY_SERVICE,
  FRAME_TYPE_SERVICE_MODE,
  FRAME_TYPE_LOCAL_TOGGLE,
  LED_MASK,
  buttonToggle,
  buttonsMenu,
  buttonValue,
};