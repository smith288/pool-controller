<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Pool Controller Login</title>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <div class="container">
    <div class="login-panel">
      <h1>Pool Controller</h1>
      <div class="pin-input">
        <div class="pin-boxes">
          <input type="password" class="pin-box" maxlength="1" pattern="[0-9]" inputmode="numeric" data-index="0">
          <input type="password" class="pin-box" maxlength="1" pattern="[0-9]" inputmode="numeric" data-index="1">
          <input type="password" class="pin-box" maxlength="1" pattern="[0-9]" inputmode="numeric" data-index="2">
          <input type="password" class="pin-box" maxlength="1" pattern="[0-9]" inputmode="numeric" data-index="3">
        </div>
        <div class="error-message"></div>
      </div>
    </div>
  </div>

  <script>
    const pinBoxes = document.querySelectorAll('.pin-box');
    
    // Handle input in pin boxes
    pinBoxes.forEach((box, index) => {
      box.addEventListener('input', (e) => {
        if (e.target.value) {
          // Move to next box
          if (index < pinBoxes.length - 1) {
            pinBoxes[index + 1].focus();
          }
          // If it's the last box, submit
          if (index === pinBoxes.length - 1) {
            validatePin();
          }
        }
      });

      // Handle backspace
      box.addEventListener('keydown', (e) => {
        if (e.key === 'Backspace' && !e.target.value && index > 0) {
          pinBoxes[index - 1].focus();
        }
      });
    });

    function validatePin() {
      const pin = Array.from(pinBoxes).map(box => box.value).join('');
      fetch('/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ pin })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          window.location.href = '/';
        } else {
          document.querySelector('.error-message').textContent = 'Invalid PIN';
          // Clear and focus first box
          pinBoxes.forEach(box => box.value = '');
          pinBoxes[0].focus();
        }
      });
    }

    // Focus first box on load
    window.addEventListener('load', () => {
      pinBoxes[0].focus();
    });
  </script>
</body>
</html> 