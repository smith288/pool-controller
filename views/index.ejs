<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= poolName %> </title>
  <!-- Include CSS -->
  <link rel="stylesheet" href="<%= basePath %>/css/style.css">
  <script>
    // Add theme handling
    window.initialStates = JSON.parse(localStorage.getItem('poolControllerStates') || '{}');
    
    // Check system preference first, then fallback to stored preference
    const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const savedTheme = localStorage.getItem('theme');
    const theme = savedTheme || (systemPrefersDark ? 'dark' : 'light');
    document.documentElement.setAttribute('data-theme', theme);

    // Listen for system theme changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
      if (!localStorage.getItem('theme')) {  // Only auto-switch if user hasn't manually set a preference
        const newTheme = e.matches ? 'dark' : 'light';
        document.documentElement.setAttribute('data-theme', newTheme);
      }
    });
  </script>
</head>
<body>
  <div class="container">
    <div class="header-row">
      <h1><%= poolName %></h1>
      <button id="theme-toggle" class="theme-toggle" aria-label="Toggle theme">
        <svg class="sun-icon" viewBox="0 0 24 24">
          <path d="M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zM2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1zm18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1zM11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1zm0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1zM5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41L5.99 4.58zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41l-1.06-1.06zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06z"/>
        </svg>
        <svg class="moon-icon" viewBox="0 0 24 24">
          <path d="M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9 9-4.03 9-9c0-.46-.04-.92-.1-1.36-.98 1.37-2.58 2.26-4.4 2.26-3.03 0-5.5-2.47-5.5-5.5 0-1.82.89-3.42 2.26-4.4-.44-.06-.9-.1-1.36-.1z"/>
        </svg>
      </button>
    </div>

    <div class="display-panel">
      <h2>Pool Controller Display</h2>
      <div id="led-display" class="led-display">
        <%= typeof currentLEDDisplay === 'object' && currentLEDDisplay.display ? currentLEDDisplay.display : 'Initializing...' %>
      </div>
    </div>

    <div class="control-pad">
      <div class="d-pad">
        <button class="d-pad-button up" data-direction="up" aria-label="Up">
          <svg viewBox="0 0 24 24">
            <path d="M12 4l-8 8h6v8h4v-8h6z"/>
          </svg>
        </button>
        <button class="d-pad-button left" data-direction="left" aria-label="Left">
          <svg viewBox="0 0 24 24">
            <path d="M4 12l8-8v6h8v4h-8v6z"/>
          </svg>
        </button>
        <button class="d-pad-button menu" data-direction="menu" aria-label="Menu">
          <svg viewBox="0 0 24 24">
            <path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/>
          </svg>
        </button>
        <button class="d-pad-button right" data-direction="right" aria-label="Right">
          <svg viewBox="0 0 24 24">
            <path d="M20 12l-8-8v6H4v4h8v6z"/>
          </svg>
        </button>
        <button class="d-pad-button down" data-direction="down" aria-label="Down">
          <svg viewBox="0 0 24 24">
            <path d="M12 20l8-8h-6V4h-4v8H4z"/>
          </svg>
        </button>
      </div>
    </div>
         
    <div class="controls-grid">
      <% if (typeof switchStatuses === 'object' && switchStatuses) { %>
        <!-- Update the mode control -->
        <div class="control-item <%= switchStatuses['spa'] === 'On' ? 'active' : '' %>" 
             data-type="spa"
             onclick="if (!this.classList.contains('disabled')) this.querySelector('.toggle-input').click()">
          <h3>
            <span class="spa-text">Spa</span>
            <span class="separator">/</span>
            <span class="pool-text">Pool</span>
          </h3>
          <input 
            type="checkbox" 
            id="toggle-mode" 
            class="toggle-input"
            data-type="spa"
            <%= (switchStatuses['spa'] === 'On') ? 'checked' : '' %>
            <%= (switchStatuses['filter'] === false) ? 'disabled' : '' %>
          >
        </div>

        <!-- Then loop through other controls -->
        <% for (const [key, value] of Object.entries(switchStatuses)) { %>
          <% if (key !== 'spa' && key !== 'pool') { %>
            <div class="control-item <%= value === 'On' ? 'active' : '' %> 
                 <%= (key === 'spa' || key === 'pool') && switchStatuses['filter'] === false ? 'disabled' : '' %>"
                 onclick="if (!this.classList.contains('disabled')) this.querySelector('.toggle-input').click()"
                 data-type="<%= key %>">
              <h3><%= key.charAt(0).toUpperCase() + key.slice(1) %></h3>
              <input 
                type="checkbox" 
                id="toggle-<%= key %>" 
                class="toggle-input"
                data-type="<%= key %>"
                <%= value === 'On' ? 'checked' : '' %>
                <%= (key === 'spa' || key === 'pool') && switchStatuses['filter'] === false ? 'disabled' : '' %>
              >
            </div>
          <% } %>
        <% } %>
      <% } else { %>
        <div>No switch statuses available</div>
      <% } %>
    </div>

    
    <!-- Add Temperature Controls -->
    <div class="controls-grid">
      <div class="temp-control spa-temp control-item">
        <h3>Spa Temperature</h3>
        <div class="temp-display">
          <span class="current-temp"><%= currentTemperatures?.spa || '--' %></span>°F
        </div>
        <div class="temp-slider-container">
          <input type="range" class="temp-slider" id="spa-temp-slider" 
                 min="64" max="104" value="<%= currentTemperatures?.spa || 80 %>"
                 data-type="spa">
          <button class="set-temp-btn" data-type="spa">Set</button>
        </div>
      </div>
      
      <div class="temp-control pool-temp control-item">
        <h3>Pool Temperature</h3>
        <div class="temp-display">
          <span class="current-temp"><%= currentTemperatures?.pool === 0 ? 'OFF' : (currentTemperatures?.pool || '--') %></span><%= currentTemperatures?.pool === 0 ? '' : '°F' %>
        </div>
        <div class="temp-slider-container">
          <input type="range" class="temp-slider" id="pool-temp-slider" 
                 min="64" max="104" value="<%= currentTemperatures?.pool || 80 %>"
                 data-type="pool">
          <button class="set-temp-btn" data-type="pool">Set</button>
        </div>
      </div>
    </div>

    <div class="sensor-temps control-item">
      <div class="sensor-temp water">
        <h3>Water Sensor</h3>
        <div class="temp-display">
          <span class="current-temp"><%= currentTemperatures?.water || '--' %></span>°F
        </div>
      </div>
      
      <div class="sensor-temp air">
        <h3>Air Sensor</h3>
        <div class="temp-display">
          <span class="current-temp"><%= currentTemperatures?.air || '--' %></span>°F
        </div>
      </div>
    </div>

  </div>
  <!-- Add footer -->
  <footer class="footer">
    Erick Smith © 2025
  </footer>
  <!-- Include client-side JavaScript -->
  <script src="<%= basePath %>/socket.io/socket.io.js"></script>
  <script src="<%= basePath %>/js/main.js"></script>
</body>
</html>
